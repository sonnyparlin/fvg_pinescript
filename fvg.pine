// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sonnyparlin

//@version=5
// 5/20/2023 4:00pm updated chart image

indicator("Fair Value Gap Finder", overlay = true)
useVolume = input.bool(false, "Use Volume to determine FVGs (Recommended)", group='Volume')
vr = input.int(2, "Volume must be X times average", step=1, group='Volume')
vl = input.int(20, "Volume moving average length", step=1, group='Volume')
emaLength = input.int(20, "EMA Length", step=1, group='Trend Identification')

ol = input.int(60, "Gap length", step=10, group='Mind The Gap')
useAutoMinGapSize = input.bool(true, "Automatically adjust minimum gap size based on ATR", group='Mind The Gap')
minGapSize = input.float(0.25, "Minimum Gap Size to show (ignored if Automatically adjust gap is selected)", step=0.05, group='Mind The Gap')

onlyShowLast = input.bool(false, "Only show latest gap", group="Mind The Gap")

if useAutoMinGapSize
    minGapSize := ta.atr(14)

ob = volume[1] > ta.sma(volume[1], vl) * vr

sellFVGColor = input.color(color.new(color.red, 70), group='Styles')
buyFVGColor = input.color(color.new(color.green, 70), group='Styles')
buyFVGText = input.string("Buyers Fair Value Gap", group='Styles')
sellFVGText = input.string("Sellers Fair Value Gap", group='Styles')
textColor = input.color(color.new(color.white, 10), group='Styles')
sizeOption = input.string(title="Label Size",
     options=["Auto", "Huge", "Large", "Normal", "Small", "Tiny"],
     defval="Small", group='Styles')

labelSize = (sizeOption == "Huge") ? size.huge :
     (sizeOption == "Large") ? size.large :
     (sizeOption == "Small") ? size.small :
     (sizeOption == "Tiny") ? size.tiny :
     (sizeOption == "Auto") ? size.auto :
         size.normal

// initialize variables
ema = ta.ema(close, emaLength)
var buyVolume = 0.0
var sellVolume = 0.0
buyVolume := (high[1]==low[1]) ? 0 : volume[1] *  (close[1]-low[1])  / (high[1]-low[1])
sellVolume := (high[1]==low[1]) ? 0 : volume[1] * (high[1]-close[1]) / (high[1]-low[1])
var box b = na

if useVolume
    if ob and buyVolume > sellVolume and high[2] < low and low - high[2] > minGapSize and close[1] > ema
        if onlyShowLast
            b.delete()
        b := box.new(bar_index, high[2], bar_index + ol, low, border_color = color.new(color.black,100), bgcolor = buyFVGColor, text=buyFVGText, text_color = textColor, text_size = labelSize, text_halign = text.align_right)

    else if ob and buyVolume < sellVolume and low[2] > high and low[2] - high > minGapSize and close[1] < ema
        if onlyShowLast
            b.delete()
        b := box.new(bar_index, low[2], bar_index + ol, high, border_color = color.new(color.black,100), bgcolor = sellFVGColor, text=sellFVGText, text_color = textColor, text_size = labelSize, text_halign = text.align_right)
else
    if high[2] < low and low - high[2] > minGapSize and close[1] > ema
        if onlyShowLast
            b.delete()
        b := box.new(bar_index, high[2], bar_index + ol, low, border_color = color.new(color.black,100), bgcolor = buyFVGColor, text=buyFVGText, text_color = textColor, text_size = labelSize, text_halign = text.align_right)

    else if low[2] > high and low[2] - high > minGapSize and close[1] < ema
        if onlyShowLast
            b.delete()
        b := box.new(bar_index, low[2], bar_index + ol, high, border_color = color.new(color.black,100), bgcolor = sellFVGColor, text=sellFVGText, text_color = textColor, text_size = labelSize, text_halign = text.align_right)

